{"meta":{"title":"Black House","subtitle":null,"description":"Love LV,Love CD","author":"hetian","url":"http://tengyan.site","root":"/"},"pages":[{"title":"分类","date":"2019-07-13T13:36:22.000Z","updated":"2019-10-15T03:15:22.000Z","comments":true,"path":"categories/index.html","permalink":"http://tengyan.site/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-07-13T13:45:21.000Z","updated":"2019-10-15T03:15:26.000Z","comments":true,"path":"tags/index.html","permalink":"http://tengyan.site/tags/index.html","excerpt":"","text":""},{"title":"禾田","date":"2019-07-13T13:46:55.000Z","updated":"2019-10-15T03:21:06.000Z","comments":true,"path":"about/index.html","permalink":"http://tengyan.site/about/index.html","excerpt":"","text":""}],"posts":[{"title":"Java 笔记","slug":"java1","date":"2019-10-13T07:16:33.380Z","updated":"2019-10-15T09:46:56.000Z","comments":true,"path":"2019/10/13/java1/","link":"","permalink":"http://tengyan.site/2019/10/13/java1/","excerpt":"","text":"java对象内存存储布局1.对象头(header)2.实例数据(instance data)3.对齐填充(padding)GCRoots(作为起点的对象)的对象1.虚拟机栈（栈帧中的本地变量表）中引用的对象2.方法区中类静态属性引用的对象3.方法区中常量引用的对象4.本地方法栈中JNI（即一般说的Native方法）引用的对象引用类型强引用普遍存在软引用还有用并非必要，发生内存溢出前，将这些对象列入回收范围之中进行第二次回收，如果还没有足够内存，会抛出异常，JDK1.2后，提供SoftReference类来实现软引用弱引用弱引用描述非必需对象，强度比软引用更低，被弱引用关联的对象只能生存到下一次垃圾回收发生之前。JDk1.2之后，提供WeakReference类实现弱引用虚引用亦称为幽灵引用或者幻影引用，最弱的引用关系。是否有虚引用对一个对象来说完全不会影响其生存时间构成影响，也无法通过虚引用来取得一个对象实例。设置虚引用唯一目的就是为了能在对象被收集时收到一个系统通知。JDK1.2之后，提供了PhantomReference类来实现虚引用","categories":[{"name":"java","slug":"java","permalink":"http://tengyan.site/categories/java/"}],"tags":[{"name":"java jvm","slug":"java-jvm","permalink":"http://tengyan.site/tags/java-jvm/"}]},{"title":"a pg","slug":"a-pg","date":"2019-07-15T09:14:56.000Z","updated":"2019-07-15T09:16:46.000Z","comments":true,"path":"2019/07/15/a-pg/","link":"","permalink":"http://tengyan.site/2019/07/15/a-pg/","excerpt":"","text":"第一篇文章","categories":[],"tags":[{"name":"maybe","slug":"maybe","permalink":"http://tengyan.site/tags/maybe/"}]}]}